@mixin image($url, $size: "", $position: 0 0, $repeat: no-repeat) {
	background: url($images + $url) $position $repeat;

	@if $size != "" {
		background-size: $size;
	}
}

@mixin bg_image($url) {
	background: url($images + $url);
	background-repeat: no-repeat;
	background-position: 0 0;
	background-size: 100% 100%;
}

@mixin icon($position: 0 0) {
	background: url($images + "icons.png") $position no-repeat;
	background-size: 1024px 768px;
	
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
}

@mixin translate($x, $y) {
	-webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin translateX($x) {
	-webkit-transform: translateX($x);
    -moz-transform: translateX($x);
    -o-transform: translateX($x);
    -ms-transform: translateX($x);
    transform: translateX($x);
}

@mixin translateY($y) {
	-webkit-transform: translateY($y);
    -moz-transform: translateY($y);
    -o-transform: translateY($y);
    -ms-transform: translateY($y);
    transform: translateY($y);
}

@mixin transition($property, $duration, $timing-function, $delay:0s) {
	-webkit-transition: $property $duration $timing-function $delay;
    -moz-transition: $property $duration $timing-function $delay;
    -o-transition: $property $duration $timing-function $delay;
    -ms-transition: $property $duration $timing-function $delay;
    transition: $property $duration $timing-function $delay;
}

@mixin linear-gradient($start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100%) { 
	background: $start;
	background: -webkit-gradient(linear, left top, left bottom, from($start), to($stop));
	background: -moz-linear-gradient(center top, $start $from, $stop $to);
	background: -moz-gradient(center top, $start $from, $stop $to);
	background: -webkit-linear-gradient(top, $start $from,$stop $to);
	background: -o-linear-gradient(top, $start $from,$stop $to);
	background: -ms-linear-gradient(top, $start $from,$stop $to);
	background: linear-gradient(to bottom, $start $from,$stop $to);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start}', endColorstr='#{$stop}',GradientType=0 );
}

@mixin item-shadow() {
	box-shadow: 0 3px 5px 2px #d4d6d5;
}

@mixin item-bottom-border() {
	//border-bottom: 4px solid #47c2d3;
	border-bottom: 4px solid #f5f5f5;
}

@mixin hover-pointer() {

	&:hover {
		cursor: pointer;
	}
}

%item-preview {
	height: 100%;
	background: #ffffff;
	overflow: hidden;
	padding: 0 10px 10px;
	@include item-bottom-border();
	@include border-radius(8px 8px 0 0);
	@include item-shadow();
		
	.type {
		display: inline-block;
		width: auto;
		height: auto;
		background: #f5f5f5;
		color: #b4b4b4; 
		font-weight: bold;
		border-bottom-right-radius: 3px;
		border-bottom-left-radius: 3px;

		.en & {
			padding-right: 5px;
			float: right;
		}

		.he & {
			padding-left: 5px;
			float: left;
		}

		.type-icon-container {
			display: inline-block;
			padding-top: 3px;

			.en & {
				padding-left: 4px;
			}

			.he & {
				padding-right: 4px;	
			}

			.surname-icon {
				position: relative;
				top: 2px;
				width: 18px;
				height: 16px;
				@include icon(-28px -161px);
			}

			.community-icon {
				width: 14px;
				height: 17px;
				@include icon(-30px -106px);
			}
		}

		.type-desc-container {
			position: relative;
			display: inline-block;
			vertical-align: top;
			padding: 5px 0;
		}
	}

	.header {
		font-size: 12px;
		font-weight: bold;
		clear: both;
	}

	.text {
		color: #474747;
		overflow: hidden;
		font-size: 11px;
	}	
}
