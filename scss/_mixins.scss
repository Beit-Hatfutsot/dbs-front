@mixin image($url, $size: "", $position: 0 0, $repeat: no-repeat) {
	background: url($images + $url) $position $repeat;

	@if $size != "" {
		background-size: $size;
	}
}

@mixin bg_image($url) {
	background: url($images + $url);
	background-repeat: no-repeat;
	background-position: 0 0;
	background-size: 100% 100%;
}

@mixin icon($position: 0 0) {
	background: url($images + "icons.png") $position no-repeat;
	background-size: 1024px 768px;
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
}

@mixin border-radius-top($radius) {
	-webkit-border-top-left-raius: $radius;
	-webkit-border-top-right-raius: $radius;
	-moz-border-top-left-radius: $radius;
	-moz-border-top-right-radius: $radius;
	-o-border-top-left-radius: $radius;
	-o-border-top-right-radius: $radius;
	border-top-left-radius: $radius;
	border-top-right-radius: $radius;
}

@mixin translate($x, $y) {
	-webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin important-translate($x, $y) {
	-webkit-transform: translate($x, $y) !important;
    -moz-transform: translate($x, $y) !important;
    -o-transform: translate($x, $y) !important;
    -ms-transform: translate($x, $y) !important;
    transform: translate($x, $y) !important;
}

@mixin translateX($x) {
	-webkit-transform: translateX($x);
    -moz-transform: translateX($x);
    -o-transform: translateX($x);
    -ms-transform: translateX($x);
    transform: translateX($x);
}

@mixin translateY($y) {
	-webkit-transform: translateY($y);
    -moz-transform: translateY($y);
    -o-transform: translateY($y);
    -ms-transform: translateY($y);
    transform: translateY($y);
}

@mixin transition($property, $duration, $timing-function, $delay:0s) {
	-webkit-transition: $property $duration $timing-function $delay;
    -moz-transition: $property $duration $timing-function $delay;
    -o-transition: $property $duration $timing-function $delay;
    -ms-transition: $property $duration $timing-function $delay;
    transition: $property $duration $timing-function $delay;
}

@mixin skew($degrees) {
	-webkit-transform: skew($degrees);
	-moz-transform: skew($degrees);
	-o-transform: skew($degrees);
}

@mixin rotate($degrees:90deg) {
	-webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    transform: rotate($degrees);
}

@mixin scale($factor)  {
	transform: scale($factor);
	 -webkit-transform: scale($factor);
}

@mixin linear-gradient($start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100%) { 
	background: $start;
	background: -webkit-gradient(linear, left top, left bottom, from($start), to($stop));
	background: -moz-linear-gradient(center top, $start $from, $stop $to);
	background: -moz-gradient(center top, $start $from, $stop $to);
	background: -webkit-linear-gradient(top, $start $from,$stop $to);
	background: -o-linear-gradient(top, $start $from,$stop $to);
	background: -ms-linear-gradient(top, $start $from,$stop $to);
	background: linear-gradient(to bottom, $start $from,$stop $to);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start}', endColorstr='#{$stop}',GradientType=0 );
}

@mixin horizontal-linear-gradient($start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100%) {
	background: $start;
	background: -webkit-gradient(linear, left top, right top, from($start), to($stop));
	background: -moz-linear-gradient(right top, $start $from, $stop $to);
	background: -moz-gradient(right top, $start $from, $stop $to);
	background: -webkit-linear-gradient(right, $start $from,$stop $to);
	background: -o-linear-gradient(right, $start $from,$stop $to);
	background: -ms-linear-gradient(right, $start $from,$stop $to);
	background: linear-gradient(to right, $start $from,$stop $to);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start}', endColorstr='#{$stop}',GradientType=0 );	
}

@mixin box-shadow($shadow) {
	-webkit-box-shadow: $shadow;
	-moz-box-shadow: $shadow;
	box-shadow: $shadow;
}

@mixin item-shadow() {
	@include box-shadow(2px 2px 5px 1px #d4d6d5)
}

@mixin item-bottom-border() {
	border-bottom: 4px solid #f5f5f5;
}

@mixin hover-pointer() {

	&:hover {
		cursor: pointer;
	}
}
